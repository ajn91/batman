apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {

    compileSdkVersion applicationBuild.compileSdkVersion
    buildToolsVersion applicationBuild.buildToolsVersion

    buildFeatures {
        dataBinding = true
        // for view binding :
        // viewBinding = true
    }
    defaultConfig {
        applicationId "jafari.alireza.batman"
        minSdkVersion applicationBuild.minSdkVersion
        targetSdkVersion applicationBuild.targetSdkVersion
        versionCode application.versionCode
        versionName application.versionName
        multiDexEnabled true

        lintOptions {
            checkReleaseBuilds true
            abortOnError true
        }
    }

    buildTypes {

        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
          android.applicationVariants.all { variant ->
              variant.outputs.all {
                  outputFileName = "${"batman"}_${variant.buildType.name}_v${defaultConfig.versionName}.apk"
              }
          }

    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    /*kotlin*/
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$library.kotlin"

    /* androidx */
    implementation "androidx.appcompat:appcompat:$library.appcompat"
    implementation "androidx.recyclerview:recyclerview:$library.recyclerview"

    /* google material design */
    implementation "com.google.android.material:material:$library.material"

    /* Retrofit using  Okhttp, Okhttp logging interceptor, Gson  */
    implementation "com.squareup.retrofit2:retrofit:$library.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$library.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$library.retrofit"
    /* Okhttp */
    implementation "com.squareup.okhttp3:logging-interceptor:$library.okhttp"

    /* RxJava2 */
    implementation "io.reactivex.rxjava2:rxjava:$library.rxjava"
    implementation "com.jakewharton.rxrelay2:rxrelay:$library.rxrelay"
    implementation "io.reactivex.rxjava2:rxandroid:$library.rxandroid"


    /* Android Architecture Component - ConstraintLayout  */
    implementation "androidx.constraintlayout:constraintlayout:$library.constraintlayout"

    /* Android Architecture Component - Room Persistance Lib  */
    implementation "androidx.room:room-runtime:$library.room"
    implementation "androidx.room:room-rxjava2:$library.room"
    kapt "androidx.room:room-compiler:$library.room"

    /* Dagger2  */
    implementation "com.google.dagger:dagger:$library.dagger"
    implementation "com.google.dagger:dagger-android:$library.dagger"
    implementation "com.google.dagger:dagger-android-support:$library.dagger"
    kapt "com.google.dagger:dagger-compiler:$library.dagger"
    kapt "com.google.dagger:dagger-android-processor:$library.dagger"


    /* glide */
    implementation "com.github.bumptech.glide:glide:$library.glide"
    kapt "com.github.bumptech.glide:compiler:$library.glide"





}


